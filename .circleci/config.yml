# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "Prints the Circle CI Workflow ID"
    steps:
      - run: "echo $CIRCLE_WORKFLOW_ID"

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  print_hello:
    docker:
      - image: cimg/base:stable
    steps:
    - checkout
    - run:
        name: "Print Hello"
        command: "echo Hello!"

  print_world:
    docker:
      - image: cimg/base:stable
    steps:
    - checkout
    - run:
        name: "Print World"
        command: "echo World!"

  print_my_env_var:
    docker:
      - image: cimg/base:stable
    steps:
    - checkout
    - run:
        name: "Print My Environment Variable"
        command: "echo $my_env_var"

  save_hello_world_output:
    docker:
      - image: cimg/base:stable
    steps:
    - checkout
    - run:
        name: "Save Hello World Output"
        command: "echo 'text to output here' > ~/output.txt"
    - persist_to_workspace:
        root: ~/
        paths:
          - output.txt
  
  print_output_file:
    docker:
      - image: cimg/base:stable
    steps:
    - checkout
    - attach_workspace:
        at: ~/
    - run:
        name: "Print Output File"
        command: "cat ~/output.txt"

  job_with_command:
    docker:
      - image: cimg/base:stable
    steps:
    - print_pipeline_id
        
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      #- say-hello
      #- print_hello
      #- print_world:
      #    requires:
      #      - print_hello
      #- print_my_env_var
      #- save_hello_world_output
      #- print_output_file:
      #    requires:
      #      - save_hello_world_output
      - job_with_command
